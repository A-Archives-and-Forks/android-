import "bond/core/bond.bond"

namespace ShortDev.Microsoft.ConnectedDevices.Protocol.Serialization

enum PropertyType {
  PropertyType_Empty = 0,
  PropertyType_UInt8 = 1,
  PropertyType_Int16 = 2,
  PropertyType_UInt16 = 3,
  PropertyType_Int32 = 4,
  PropertyType_UInt32 = 5,
  PropertyType_Int64 = 6,
  PropertyType_UInt64 = 7,
  PropertyType_Single = 8,
  PropertyType_Double = 9,
  PropertyType_Char16 = 10,
  PropertyType_Boolean = 11,
  PropertyType_String = 12,
  PropertyType_Inspectable = 13,
  PropertyType_DateTime = 14,
  PropertyType_TimeSpan = 15,
  PropertyType_Guid = 16,
  PropertyType_Point = 17,
  PropertyType_Size = 18,
  PropertyType_Rect = 19,
  PropertyType_OtherType = 20,
  PropertyType_UInt8Array = 1025,
  PropertyType_Int16Array = 1026,
  PropertyType_UInt16Array = 1027,
  PropertyType_Int32Array = 1028,
  PropertyType_UInt32Array = 1029,
  PropertyType_Int64Array = 1030,
  PropertyType_UInt64Array = 1031,
  PropertyType_SingleArray = 1032,
  PropertyType_DoubleArray = 1033,
  PropertyType_Char16Array = 1034,
  PropertyType_BooleanArray = 1035,
  PropertyType_StringArray = 1036,
  PropertyType_InspectableArray = 1037,
  PropertyType_DateTimeArray = 1038,
  PropertyType_TimeSpanArray = 1039,
  PropertyType_GuidArray = 1040,
  PropertyType_PointArray = 1041,
  PropertyType_SizeArray = 1042,
  PropertyType_RectArray = 1043,
  PropertyType_OtherTypeArray = 1044
}

struct UUID {
	0: uint32 Data1;
	1: uint16 Data3;
	2: uint16 Data2;
	3: uint64 Data4;
}

struct PropertyValue {
	// 0: required PropertyType Type = PropertyType_Empty;
	// 0: required bond.BondDataType Type = BT_UNAVAILABLE;
	0: required int32 Type = 0;
	104: uint32 UInt32Value;
	114: vector<UUID> GuidArrayValue;
	119: string StringValue;
}

struct ValueSet {
	1: map<wstring, PropertyValue> Entries;
}

struct ValueSetEntryBase {
	0: bond.BondDataType type = BT_UNAVAILABLE;
}